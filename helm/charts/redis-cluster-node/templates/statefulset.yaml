{{- if not .Values.reservePortsOnly -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "redis-cluster-node.name" . }}
  labels:
    app.kubernetes.io/name: {{ include "redis-cluster-node.name" . }}
    helm.sh/chart: {{ include "redis-cluster-node.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  serviceName: "nginx"
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "redis-cluster-node.name" . }}
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "redis-cluster-node.name" . }}
    spec:
      containers:
        - name: redis
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: {{ .Values.dataNodePort }}
              name: data
            - containerPort: {{ add .Values.dataNodePort 10000 }}
              name: bus
          env:
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: REDIS_CLUSTER_DYNAMIC_IPS
              value: "no"
            - name: REDIS_CLUSTER_ANNOUNCE_IP
              value: "{{ .Values.announceIP }}"
            - name: REDIS_NODES
              value: "{{ .Values.redisNodes }}"

          {{- if eq .Release.Name "redis-node-5" }}
            - name: REDIS_CLUSTER_REPLICAS
              value: "1"
            - name: REDIS_CLUSTER_CREATOR
              value: "yes"
          {{- end }}
          {{- if .Values.env }}
          {{- range $key, $value := .Values.env }}
            - name: "{{ $key }}"
              value: "{{ $value }}"
          {{- end }}
          {{- end }}
          volumeMounts:
            - name: redis-config
              mountPath: /opt/bitnami/redis/mounted-etc
      volumes:
        - name: redis-config
          configMap:
            name: {{ include "redis-cluster-node.name" . }}
  #       volumeMounts:
  #       - name: www
  #         mountPath: /usr/share/nginx/html
  # volumeClaimTemplates:
  # - metadata:
  #     name: www
  #   spec:
  #     accessModes: [ "ReadWriteOnce" ]
  #     resources:
  #       requests:
  #         storage: 1Gi
  #     storageClassName: thin-disk
{{- end }}
